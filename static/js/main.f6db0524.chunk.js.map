{"version":3,"sources":["logo.svg","features/counter/counterSlice.js","features/statistics/statisticsSlice.js","features/statistics/Statistics.js","features/question/questionSlice.js","lib/math.js","features/question/Question.js","App.js","app/store.js","index.js","features/counter/Counter.module.css","features/question/Question.module.css"],"names":["module","exports","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","statisticsSlice","totalQuestions","correctAnswers","recordAnswer","selectTotalQuestions","statistics","selectCorrectAnswers","Statistics","useSelector","questionSlice","showAnswer","question","correctAnswer","userAnswer","askQuestion","submitAnswer","selectQuestionText","selectCorrectAnswer","selectShowAnswer","selectUserAnswer","Decimal","require","getRandomInt","max","Math","floor","random","askMulDivQuestion","a","pow","b","aa","bb","result","mul","askMultiplyTwoFrctions","div","length","askDivideTwoFrctions","Question","questionText","userAnswerIsTheCorrectAnswer","dispatch","useDispatch","useState","answer","setAnswer","className","styles","textbox","onChange","e","target","button","onClick","nextQuestion","App","configureStore","reducer","counter","counterReducer","statisticsReducer","questionReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.f6db0524.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8dad8028.svg\";","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const statisticsSlice = createSlice({\r\n  name: 'statistics',\r\n  initialState: {\r\n    totalQuestions: 0,\r\n    correctAnswers: 0\r\n  },\r\n  reducers: {\r\n    recordAnswer: (state, action) => {\r\n        state.totalQuestions += 1;\r\n        state.correctAnswers += (action.payload) ? 1 : 0;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { recordAnswer } = statisticsSlice.actions;\r\n\r\nexport const selectTotalQuestions = state => state.statistics.totalQuestions;\r\nexport const selectCorrectAnswers = state => state.statistics.correctAnswers;\r\n\r\nexport default statisticsSlice.reducer;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  selectTotalQuestions,\r\n  selectCorrectAnswers\r\n} from './statisticsSlice';\r\n\r\nexport function Statistics() {\r\n  const totalQuestions = useSelector(selectTotalQuestions);\r\n  const correctAnswers = useSelector(selectCorrectAnswers);\r\n\r\n  return (\r\n    <div>\r\n        <p>Total questions: {totalQuestions}</p>\r\n        <p>Correct answers: {correctAnswers}</p>\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const questionSlice = createSlice({\r\n  name: 'question',\r\n  initialState: {\r\n    showAnswer: false,\r\n    question: '2 x 2 = ?',\r\n    correctAnswer: 4,\r\n    userAnswer: 0,\r\n  },\r\n  reducers: {\r\n    askQuestion: (state, action) => {\r\n      const { question, correctAnswer } = action.payload;\r\n      state.question = question;\r\n      state.correctAnswer = correctAnswer;\r\n      state.showAnswer = false;\r\n      state.userAnswer = false;\r\n    },\r\n    submitAnswer: (state, action) => {\r\n      const { userAnswer } = action.payload;\r\n      state.showAnswer = true;\r\n      state.userAnswer = userAnswer;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { askQuestion, submitAnswer } = questionSlice.actions;\r\n\r\nexport const selectQuestionText = state => state.question.question;\r\nexport const selectCorrectAnswer = state => state.question.correctAnswer;\r\nexport const selectShowAnswer = state => state.question.showAnswer;\r\nexport const selectUserAnswer = state => state.question.userAnswer;\r\n\r\nexport default questionSlice.reducer;\r\n","const Decimal = require('decimal.js');\r\n\r\nconst getRandomInt = (max) => {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nconst askSubstractFractions = () => {\r\n    const a = getRandomInt(100000) / Math.pow(10, getRandomInt(5)+1);\r\n    const b = getRandomInt(100000) / Math.pow(10, getRandomInt(5)+1);\r\n\r\n    const aa = new Decimal(a);\r\n    const bb = new Decimal(b);\r\n\r\n    const result = aa.minus(bb);\r\n    if (result > 0) {\r\n        return {\r\n            question: `${a} - ${b} = ?`,\r\n            correctAnswer: `${result}`\r\n        }\r\n    } else {\r\n        return {\r\n            question: `${b} - ${a} = ?`,\r\n            correctAnswer: `${-result}`\r\n        }\r\n    }\r\n}\r\n\r\nconst askAddFractions = () => {\r\n    const a = getRandomInt(100000) / Math.pow(10, getRandomInt(5)+1);\r\n    const b = getRandomInt(100000) / Math.pow(10, getRandomInt(5)+1);\r\n\r\n    const aa = new Decimal(a);\r\n    const bb = new Decimal(b);\r\n\r\n    const result = aa.plus(bb);\r\n    return {\r\n        question: `${a} + ${b} = ?`,\r\n        correctAnswer: `${result}`\r\n    }\r\n}\r\n\r\nconst askMultiplyTwoFrctions = () => {\r\n    const a = getRandomInt(100) / Math.pow(10, getRandomInt(2)+1);\r\n    const b = getRandomInt(100) / Math.pow(10, getRandomInt(2)+1);\r\n\r\n    const aa = new Decimal(a);\r\n    const bb = new Decimal(b);\r\n\r\n    const result = aa.mul(bb);\r\n    return {\r\n        question: `${a} x ${b} = ?`,\r\n        correctAnswer: `${result}`\r\n    }\r\n}\r\n\r\nconst askDivideTwoFrctions = () => {\r\n    while (true) {\r\n        const a = getRandomInt(100) / Math.pow(10, getRandomInt(2)+1);\r\n        const b = getRandomInt(100) / Math.pow(10, getRandomInt(2)+1);\r\n    \r\n        const aa = new Decimal(a);\r\n        const bb = new Decimal(b);\r\n    \r\n        const result = aa.div(bb);\r\n        const strResult = `${result}`;\r\n        if (strResult.length < 6) {\r\n            return {\r\n                question: `${a} : ${b} = ?`,\r\n                correctAnswer: `${result}`\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const askAddSubstractQuestion = () => {\r\n\r\n    if (Math.random() > 0.6) {\r\n        return askAddFractions();\r\n    } else {\r\n        return askSubstractFractions();\r\n    }\r\n};\r\n\r\nexport const askMulDivQuestion = () => {\r\n\r\n    if (Math.random() > 0.7) {\r\n        return askMultiplyTwoFrctions();\r\n    } else {\r\n        return askDivideTwoFrctions();\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    askQuestion,\r\n    submitAnswer,\r\n    selectQuestionText,\r\n    selectCorrectAnswer,\r\n    selectUserAnswer,\r\n    selectShowAnswer,\r\n} from './questionSlice';\r\n\r\nimport {\r\n    recordAnswer\r\n} from '../statistics/statisticsSlice';\r\n\r\nimport {\r\n    askMulDivQuestion\r\n} from '../../lib/math';\r\n\r\nimport styles from './Question.module.css';\r\n\r\nexport function Question() {\r\n  const questionText = useSelector(selectQuestionText);\r\n  const correctAnswer = useSelector(selectCorrectAnswer);\r\n  const showAnswer = useSelector(selectShowAnswer);\r\n  const userAnswer = useSelector(selectUserAnswer);\r\n\r\n  const userAnswerIsTheCorrectAnswer = `${correctAnswer}` === `${userAnswer}`;\r\n\r\n  const dispatch = useDispatch();\r\n  const [answer, setAnswer] = useState('');\r\n\r\n  return (\r\n    <div  className={styles.value}>\r\n        <div>\r\n            <p>{questionText}</p>\r\n        </div>\r\n        <div>\r\n            {(!showAnswer) && <p>&nbsp;</p>}\r\n\r\n            {(showAnswer && userAnswerIsTheCorrectAnswer) && (\r\n                <p>{userAnswer} is correct!</p>\r\n            )}\r\n\r\n            {(showAnswer && !userAnswerIsTheCorrectAnswer) && (\r\n                <p>Answer: {correctAnswer}</p>\r\n            )}\r\n        </div>\r\n\r\n        <input \r\n            className={styles.textbox}\r\n            value={answer} \r\n            onChange={e => setAnswer(e.target.value)}\r\n        />\r\n        {(!showAnswer && <div><button\r\n            className={styles.button}\r\n            onClick={() => {\r\n                const userAnswer = answer;\r\n                dispatch(recordAnswer(userAnswer === correctAnswer));\r\n                dispatch(submitAnswer({userAnswer}));\r\n            }}\r\n        >\r\n          Submit answer\r\n        </button></div>)}\r\n        \r\n        {(showAnswer && <div>\r\n            <button\r\n                className={styles.button}\r\n                onClick={() => {\r\n                    const nextQuestion = askMulDivQuestion();\r\n                    dispatch(askQuestion(nextQuestion));\r\n                    setAnswer('');\r\n                }}\r\n            >\r\n            Next question\r\n            </button>\r\n        </div>)}\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport { Counter } from './features/counter/Counter';\r\nimport { Statistics } from './features/statistics/Statistics';\r\nimport { Question } from './features/question/Question';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n        <Question />\r\n        <Statistics />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport statisticsReducer from '../features/statistics/statisticsSlice';\r\nimport questionReducer from '../features/question/questionSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    statistics: statisticsReducer,\r\n    question: questionReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__37kVR\",\"value\":\"Counter_value__17iO9\",\"button\":\"Counter_button__bqx_m\",\"textbox\":\"Counter_textbox__2wz74\",\"asyncButton\":\"Counter_asyncButton___D-9M Counter_button__bqx_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Question_row__3Cso0\",\"value\":\"Question_value__2Cnoj\",\"button\":\"Question_button__3HoZI\",\"textbox\":\"Question_textbox__1jUw8\"};"],"sourceRoot":""}