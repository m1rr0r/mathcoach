{"version":3,"sources":["logo.svg","features/counter/counterSlice.js","features/statistics/statisticsSlice.js","features/statistics/Statistics.js","features/question/questionSlice.js","lib/math.js","features/question/Question.js","App.js","app/store.js","index.js","features/counter/Counter.module.css","features/question/Question.module.css"],"names":["counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","statisticsSlice","totalQuestions","correctAnswers","correctInARow","recordAnswer","console","log","selectTotalQuestions","statistics","selectCorrectAnswers","selectCorrectInARow","Statistics","useSelector","questionSlice","showAnswer","question","correctAnswer","userAnswer","askQuestion","submitAnswer","selectQuestionText","selectCorrectAnswer","selectShowAnswer","selectUserAnswer","Decimal","require","getRandomInt","max","Math","floor","random","askMulDivQuestion","a","pow","b","aa","bb","result","mul","askMultiplyTwoFrctions","div","length","askDivideTwoFrctions","Question","questionText","userAnswerIsTheCorrectAnswer","dispatch","useDispatch","useState","answer","setAnswer","className","styles","valuecorrect","valuewrong","onSubmit","e","preventDefault","nextQuestion","textbox","onChange","target","type","button","App","configureStore","reducer","counter","counterReducer","statisticsReducer","questionReducer","store","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4c0ea716.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import { createSlice } from '@reduxjs/toolkit';\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = amount => dispatch => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectCount = state => state.counter.value;\n\nexport default counterSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const statisticsSlice = createSlice({\n  name: 'statistics',\n  initialState: {\n    totalQuestions: 0,\n    correctAnswers: 0,\n    correctInARow: 0,\n  },\n  reducers: {\n    recordAnswer: (state, action) => {\n        state.totalQuestions += 1;\n        console.log(action);\n        if (action.payload) {\n          state.correctAnswers += 1;\n          state.correctInARow += 1;\n        } else {\n          state.correctInARow = 0;\n        }\n    },\n  },\n});\n\nexport const { recordAnswer } = statisticsSlice.actions;\n\nexport const selectTotalQuestions = state => state.statistics.totalQuestions;\nexport const selectCorrectAnswers = state => state.statistics.correctAnswers;\nexport const selectCorrectInARow = state => state.statistics.correctInARow;\n\nexport default statisticsSlice.reducer;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  selectTotalQuestions,\n  selectCorrectAnswers,\n  selectCorrectInARow\n} from './statisticsSlice';\n\nexport function Statistics() {\n  const totalQuestions = useSelector(selectTotalQuestions);\n  const correctAnswers = useSelector(selectCorrectAnswers);\n  const correctInARow = useSelector(selectCorrectInARow);\n\n  return (\n    <div>\n        <p>Questions: {totalQuestions}; Correct: {correctAnswers}</p>\n        {(correctInARow > 0) && \n          <p>Correct in a row: {correctInARow}</p>\n        }\n\n        {(correctInARow === 0) && \n          <p>&nbsp;</p>\n        }\n\n    </div>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const questionSlice = createSlice({\n  name: 'question',\n  initialState: {\n    showAnswer: false,\n    question: '2 x 2 = ?',\n    correctAnswer: 4,\n    userAnswer: 0,\n  },\n  reducers: {\n    askQuestion: (state, action) => {\n      const { question, correctAnswer } = action.payload;\n      state.question = question;\n      state.correctAnswer = correctAnswer;\n      state.showAnswer = false;\n      state.userAnswer = false;\n    },\n    submitAnswer: (state, action) => {\n      const { userAnswer } = action.payload;\n      state.showAnswer = true;\n      state.userAnswer = userAnswer;\n    }\n  },\n});\n\nexport const { askQuestion, submitAnswer } = questionSlice.actions;\n\nexport const selectQuestionText = state => state.question.question;\nexport const selectCorrectAnswer = state => state.question.correctAnswer;\nexport const selectShowAnswer = state => state.question.showAnswer;\nexport const selectUserAnswer = state => state.question.userAnswer;\n\nexport default questionSlice.reducer;\n","const Decimal = require('decimal.js');\n\nconst getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst askSubstractFractions = () => {\n    const a = getRandomInt(100000) / Math.pow(10, getRandomInt(5)+1);\n    const b = getRandomInt(100000) / Math.pow(10, getRandomInt(5)+1);\n\n    const aa = new Decimal(a);\n    const bb = new Decimal(b);\n\n    const result = aa.minus(bb);\n    if (result > 0) {\n        return {\n            question: `${a} - ${b} = ?`,\n            correctAnswer: `${result}`\n        }\n    } else {\n        return {\n            question: `${b} - ${a} = ?`,\n            correctAnswer: `${-result}`\n        }\n    }\n}\n\nconst askAddFractions = () => {\n    const a = getRandomInt(100000) / Math.pow(10, getRandomInt(5)+1);\n    const b = getRandomInt(100000) / Math.pow(10, getRandomInt(5)+1);\n\n    const aa = new Decimal(a);\n    const bb = new Decimal(b);\n\n    const result = aa.plus(bb);\n    return {\n        question: `${a} + ${b} = ?`,\n        correctAnswer: `${result}`\n    }\n}\n\nconst askMultiplyTwoFrctions = () => {\n    const a = getRandomInt(100) / Math.pow(10, getRandomInt(2)+1);\n    const b = getRandomInt(100) / Math.pow(10, getRandomInt(2)+1);\n\n    const aa = new Decimal(a);\n    const bb = new Decimal(b);\n\n    const result = aa.mul(bb);\n    return {\n        question: `${a} x ${b} = ?`,\n        correctAnswer: `${result}`\n    }\n}\n\nconst askDivideTwoFrctions = () => {\n    while (true) {\n        const a = getRandomInt(100) / Math.pow(10, getRandomInt(2)+1);\n        const b = getRandomInt(100) / Math.pow(10, getRandomInt(2)+1);\n    \n        const aa = new Decimal(a);\n        const bb = new Decimal(b);\n    \n        const result = aa.div(bb);\n        const strResult = `${result}`;\n        if (strResult.length < 6) {\n            return {\n                question: `${a} : ${b} = ?`,\n                correctAnswer: `${result}`\n            }\n        }\n    }\n}\n\nexport const askAddSubstractQuestion = () => {\n\n    if (Math.random() > 0.6) {\n        return askAddFractions();\n    } else {\n        return askSubstractFractions();\n    }\n};\n\nexport const askMulDivQuestion = () => {\n\n    if (Math.random() > 0.7) {\n        return askMultiplyTwoFrctions();\n    } else {\n        return askDivideTwoFrctions();\n    }\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    askQuestion,\n    submitAnswer,\n    selectQuestionText,\n    selectCorrectAnswer,\n    selectUserAnswer,\n    selectShowAnswer,\n} from './questionSlice';\n\nimport {\n    recordAnswer\n} from '../statistics/statisticsSlice';\n\nimport {\n    askMulDivQuestion\n} from '../../lib/math';\n\nimport styles from './Question.module.css';\n\nexport function Question() {\n  const questionText = useSelector(selectQuestionText);\n  const correctAnswer = useSelector(selectCorrectAnswer);\n  const showAnswer = useSelector(selectShowAnswer);\n  const userAnswer = useSelector(selectUserAnswer);\n\n  const userAnswerIsTheCorrectAnswer = `${correctAnswer}` === `${userAnswer}`;\n\n  const dispatch = useDispatch();\n  const [answer, setAnswer] = useState('');\n\n  return (\n    <div className={styles.value}>\n        <div>\n            <p>{questionText}</p>\n        </div>\n        <div>\n            {(!showAnswer) && <p className={styles.valuecorrect}>&nbsp;</p>}\n\n            {(showAnswer && userAnswerIsTheCorrectAnswer) && (\n                <p className={styles.valuecorrect}>{userAnswer} is correct!</p>\n            )}\n\n            {(showAnswer && !userAnswerIsTheCorrectAnswer) && (\n                <p className={styles.valuewrong}>Answer: {correctAnswer}</p>\n            )}\n\n        </div>\n        <form onSubmit={(e) => {\n                e.preventDefault();\n                if (showAnswer) {\n                    const nextQuestion = askMulDivQuestion();\n                    dispatch(askQuestion(nextQuestion));\n                    setAnswer('');\n                } else {\n                    const userAnswer = answer;\n                    dispatch(recordAnswer(`${correctAnswer}` === `${userAnswer}`));\n                    dispatch(submitAnswer({userAnswer}));\n                }\n            }} \n        >\n        <input \n            className={styles.textbox}\n            value={answer} \n            onChange={e => setAnswer(e.target.value)}\n        />\n        {(!showAnswer && <div><button\n            type=\"submit\"\n            className={styles.button}\n        >\n          Submit answer\n        </button></div>)}\n        {(showAnswer && <div>\n            <button\n                type=\"submit\"\n                className={styles.button}\n            >\n            Next question\n            </button>\n        </div>)}\n        </form>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport { Counter } from './features/counter/Counter';\nimport { Statistics } from './features/statistics/Statistics';\nimport { Question } from './features/question/Question';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <Question />\n        <Statistics />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport statisticsReducer from '../features/statistics/statisticsSlice';\nimport questionReducer from '../features/question/questionSlice';\n\nexport default configureStore({\n  reducer: {\n    counter: counterReducer,\n    statistics: statisticsReducer,\n    question: questionReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\n\nimport { askMulDivQuestion } from './lib/math';\nimport { askQuestion } from './features/question/questionSlice';\n\nconst nextQuestion = askMulDivQuestion();\nstore.dispatch(askQuestion(nextQuestion));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Question_row__ET1k5\",\"value\":\"Question_value__2CLlh\",\"valuecorrect\":\"Question_valuecorrect__3TXM8\",\"valuewrong\":\"Question_valuewrong__2Ex1K\",\"button\":\"Question_button__2pcm0\",\"textbox\":\"Question_textbox__1V3Xn\"};"],"sourceRoot":""}